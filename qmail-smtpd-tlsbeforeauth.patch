--- netqmail-1.05/qmail-smtpd.c	2006-06-16 20:01:36.000000000 +0100
+++ netqmail-1.05-patched/qmail-smtpd.c	2006-06-16 20:03:03.000000000 +0100
@@ -98,6 +98,9 @@
 int err_noauth() { out("504 auth type unimplemented (#5.5.1)\r\n"); return -1; }
 int err_authabrt() { out("501 auth exchange canceled (#5.0.0)\r\n"); return -1; }
 int err_input() { out("501 malformed auth input (#5.5.4)\r\n"); return -1; }
+#if defined(TLS) && defined(TLS_BEFORE_AUTH)
+int err_wantstarttls() { out("530 Must issue a STARTTLS command first (#5.7.0)\r\n"); return -1; };
+#endif
 void err_authfail() { out("535 authentication failed (#5.7.1)\r\n"); }
 
 stralloc greeting = {0};
@@ -338,6 +341,13 @@
   smtp_greet("250 "); out("\r\n");
   seenmail = 0; dohelo(arg);
 }
+void smtp_authout() {
+#ifdef CRAM_MD5
+  out("250-AUTH LOGIN PLAIN CRAM-MD5\r\n");
+#else
+  out("250-AUTH LOGIN PLAIN\r\n");
+#endif
+}
 /* ESMTP extensions are published here */
 void smtp_ehlo(arg) char *arg;
 {
@@ -352,12 +362,12 @@
 #endif
   size[fmt_ulong(size,(unsigned int) databytes)] = 0;
   out("\r\n250-PIPELINING\r\n250-8BITMIME\r\n");
-  out("250-SIZE "); out(size); out("\r\n");
-#ifdef CRAM_MD5
-  out("250 AUTH LOGIN PLAIN CRAM-MD5\r\n");
+#if defined(TLS) && defined(TLS_BEFORE_AUTH)
+  if(ssl) smtp_authout();
 #else
-  out("250 AUTH LOGIN PLAIN\r\n");
+  smtp_authout();
 #endif
+  out("250 SIZE "); out(size); out("\r\n");
   seenmail = 0; dohelo(arg);
 }
 void smtp_rset(arg) char *arg;
@@ -615,6 +625,9 @@
 {
   int r;
 
+#if defined(TLS) && defined(TLS_BEFORE_AUTH)
+  if (!ssl) return err_wantstarttls();
+#endif
   if (*arg) {
     if (r = b64decode(arg,str_len(arg),&user) == 1) return err_input();
   }
@@ -639,6 +652,9 @@
 {
   int r, id = 0;
 
+#if defined(TLS) && defined(TLS_BEFORE_AUTH)
+  if (!ssl) return err_wantstarttls();
+#endif
   if (*arg) {
     if (r = b64decode(arg,str_len(arg),&resp) == 1) return err_input();
   }
@@ -665,6 +681,10 @@
   int i, r;
   char *s;
 
+#if defined(TLS) && defined(TLS_BEFORE_AUTH)
+  if (!ssl) return err_wantstarttls();
+#endif
+
   s = unique;                                           /* generate challenge */
   s += fmt_uint(s,getpid());
   *s++ = '.';
